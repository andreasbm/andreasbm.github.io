{"version":3,"sources":["../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/render.js","../node_modules/lit-element/lit-element.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","styles/shared.js","atoms/buttons.js","atoms/container.js","atoms/icon.js","atoms/text.js","icons.js","molecules/header.js","atoms/button.js","molecules/project.js","molecules/social.js","molecules/footer.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","util/show-youtube-video.js","app.js","node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["directives","WeakMap","directive","f","d","set","isDirective","o","has","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","n","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","parts","this","partIndex","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","strings","length","values","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","undefined","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","SVGTemplateResult","svgElement","firstChild","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","templateCache","templateCaches","get","stringsArray","keyString","Map","key","join","getTemplateElement","render","Object","assign","appendInto","svg","LitElement","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","refNode","insertCount","walkerIndex","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","UpdatingElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","HTMLElement","_saveInstanceProperties","_requestUpdate","constructor","_classProperties","_v","p","hasOwnProperty","_attributeToProperty","ctor","attr","_attributeNameForProperty","attrValue","_propertyValueToAttribute","propName","_attributeToPropertyMap","_propertyValueFromAttribute","oldValue","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","previousUpdatePromise","res","rej","reject","_hasConnected","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","size","k","_propertyToAttribute","hasUpdated","_getUpdateComplete","superProperties","getPrototypeOf","_ensureClassProperties","noAccessor","prototype","defineProperty","configurable","enumerable","superCtor","finalize","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","observedAttributes","customElement","classOrDescriptor","clazz","define","descriptor","kind","elements","standardProperty","placement","initializer","property","protoOrDescriptor","proto","query","selector","renderRoot","legacyQuery","standardQuery","queryAll","eventOptions","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","unsafeCSS","css","reduce","acc","idx","flattenStyles","flat","Infinity","arrayFlat","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","_styles","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","styleElement","templateResult","_getUniqueStyles","userStyles","reduceRight","unshift","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","litRender","delete","sharedStyles","Buttons","Container","Icon","Text","heading","ariaLevel","center","margin","githubIconTemplate","arrowDownIconTemplate","sendIconTemplate","arrowRightIconTemplate","videoIconTemplate","twitterIconTemplate","spotifyIconTemplate","linkedInIconTemplate","Header","img","Button","tabIndex","role","Project","cover","date","logo","Social","headline","Footer","bundleURL","getBundleURLCached","getBundleURL","err","matches","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","id","code","LazyPromise","loadBundles","then","all","loadBundle","bundleLoaders","registerBundleLoader","loader","module","load","register","bundle","substring","bundleLoader","resolved","catch","executor","promise","onSuccess","onError","showYoutubeVideo","youtubeId","openDialog","$content","$dialog","PROJECT_ASSETS_BASE_PATH","GA_MEASUREMENT_ID","projectPath","extra","projectCover","projectLogo","App","gtag","location","pathname","href","$elem","shadowRoot","scrollIntoView","behavior","block","scrollTo","script","async","charset","src","onerror","onload","getElementsByTagName"],"mappings":"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","file":"app.026510a3.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","import {css} from \"/web_modules/lit-element.js\";\n\nexport const sharedStyles = css`\n\th1, h2, h3, h4, h5, h6 {\n\t\tfont-weight: 500;\n\t\tline-height: 1.4em;\n\t}\n\t\n\ta {\n\t\ttext-decoration: none;\n\t}\n\t\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`;","import { LitElement, html, css } from \"./../web_modules/lit-element.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\n\nclass Buttons extends LitElement {\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: inline-flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t::slotted(:not(:last-child)) {\n\t\t\t\t\tmargin: 0 var(--spacing-xxl) 0 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 770px) {\n\t\t\t\t\t:host {\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\talign-items: stretch;\n\t\t\t\t\t\tjustify-content: stretch;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t::slotted(*) {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t::slotted(:not(:last-child)) {\n\t\t\t\t\t\tmargin: 0 0 var(--spacing-l);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t::slotted(:first-child:last-child) (\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<slot></slot>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-buttons\", Buttons);","import {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Container extends LitElement {\n\n\tstatic get properties () {\n\t\treturn {\n\t\t\tsize: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: var(--spacing-xxxl) var(--spacing-l);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([size=\"small\"]) {\n\t\t\t\t\t--container-width: var(--container-width-m);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#container {\n\t\t\t\t\tmax-width: var(--container-width, var(--container-width-l));\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<div id=\"container\">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-container\", Container);","import {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Icon extends LitElement {\n\n\tstatic get properties () {\n\t\treturn {\n\t\t\ttemplate: {\n\t\t\t\ttype: Object\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\twidth: var(--icon-size, 20px);\n\t\t\t\t\theight: var(--icon-size, 20px);\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`${this.template}`;\n\t}\n}\n\ncustomElements.define(\"an-icon\", Icon);","import {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Text extends LitElement {\n\n\tstatic get properties () {\n\t\treturn {\n\t\t\theading: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\tariaLevel: {\n\t\t\t\ttype: String,\n\t\t\t\tattribute: \"aria-level\",\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\ttype: Boolean,\n\t\t\t\treflect: true\n\t\t\t},\n\t\t\tmargin: {\n\t\t\t\ttype: String,\n\t\t\t\treflect: true\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tfont-size: var(--font-size-l);\n\t\t\t\t\tfont-weight: var(--font-weight-t);\n\t\t\t\t\tline-height: var(--line-height-m);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([role=\"heading\"]) {\n\t\t\t\t\tfont-weight: var(--font-weight-b);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([aria-level=\"2\"]) {\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([center]) {\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([margin=\"medium\"]) {\n\t\t\t\t\tmargin: 0 0 var(--spacing-s);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([margin=\"large\"]) {\n\t\t\t\t\tmargin: 0 0 var(--spacing-l);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host([margin=\"xlarge\"]) {\n\t\t\t\t\tmargin: 0 0 var(--spacing-xxxl);\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`<slot></slot>`;\n\t}\n}\n\ncustomElements.define(\"an-text\", Text);","import {svg} from \"./web_modules/lit-html.js\";\n\nexport const githubIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.927 4.084A8.068 8.068 0 0012.015 1.1 7.678 7.678 0 008 0a7.68 7.68 0 00-4.016 1.1 8.067 8.067 0 00-2.911 2.984A8.177 8.177 0 000 8.2c0 1.787.509 3.394 1.526 4.821 1.017 1.428 2.332 2.415 3.943 2.963.187.036.326.01.416-.074a.422.422 0 00.136-.32l-.006-.577c-.003-.363-.005-.68-.005-.95l-.24.042c-.152.029-.345.041-.578.038a4.3 4.3 0 01-.724-.075 1.599 1.599 0 01-.697-.32 1.354 1.354 0 01-.459-.657l-.104-.246a2.68 2.68 0 00-.328-.544c-.15-.2-.3-.335-.453-.406l-.073-.053a.772.772 0 01-.135-.129.588.588 0 01-.094-.149c-.02-.05-.004-.09.052-.123.056-.032.156-.048.302-.048l.208.032c.14.029.311.114.516.256.205.143.373.328.505.555.16.292.352.515.578.668.226.153.453.23.682.23.23 0 .428-.018.594-.054.167-.035.323-.089.469-.16.062-.477.233-.844.51-1.1a6.975 6.975 0 01-1.067-.192 4.194 4.194 0 01-.98-.417 2.822 2.822 0 01-.838-.715c-.222-.285-.405-.659-.547-1.121-.142-.463-.213-.997-.213-1.602 0-.861.274-1.595.823-2.2-.257-.647-.233-1.373.073-2.178.2-.064.5-.016.895.144.396.16.686.298.87.411.184.114.332.21.443.289a7.227 7.227 0 012-.278c.687 0 1.354.093 2 .278l.396-.256c.27-.171.59-.328.958-.47.368-.143.65-.182.844-.118.312.805.34 1.53.083 2.178.549.606.823 1.339.823 2.2 0 .605-.071 1.14-.213 1.607-.143.466-.327.84-.552 1.121a2.929 2.929 0 01-.844.71 4.202 4.202 0 01-.98.417c-.315.085-.671.15-1.067.192.361.32.542.826.542 1.516v2.253a.43.43 0 00.13.32c.087.086.224.11.411.075 1.612-.548 2.926-1.536 3.943-2.963S16 9.987 16 8.2c0-1.487-.358-2.86-1.073-4.116z\" fill-rule=\"nonzero\"/></svg>\n`;\n\nexport const arrowDownIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M9 12.01V0H7v12.01H4L8 16l4-3.99z\"/></svg>\n`;\n\nexport const sendIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M.008 14.714L16 7.857.008 1 0 6.333l11.429 1.524L0 9.381z\"/></svg>\n`;\n\nexport const arrowRightIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"><g id=\"icons/arrow-right\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><path id=\"icon\" fill=\"currentColor\" fill-rule=\"nonzero\" d=\"M12.01 7H0v2h12.01v3L16 8l-3.99-4z\"/></g></svg>\n`;\n\nexport const videoIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"><g id=\"icons/video\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M12.444 7V3.889c0-.489-.4-.889-.888-.889H.889C.4 3 0 3.4 0 3.889v8.889c0 .489.4.889.889.889h10.667c.488 0 .888-.4.888-.89v-3.11L16 13.222V3.444L12.444 7z\" id=\"icon\" fill=\"currentColor\" fill-rule=\"nonzero\"/></g></svg>\n`;\n\nexport const twitterIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"><g id=\"icons/twitter\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M16 2.57a6.736 6.736 0 01-1.89.528 3.315 3.315 0 001.443-1.85 6.479 6.479 0 01-2.08.81A3.258 3.258 0 0011.077 1C9.261 1 7.799 2.503 7.799 4.346c0 .265.022.52.076.763-2.727-.136-5.14-1.469-6.761-3.5a3.419 3.419 0 00-.449 1.692c0 1.158.585 2.185 1.457 2.78A3.191 3.191 0 01.64 5.669v.036c0 1.626 1.137 2.976 2.628 3.287-.267.074-.558.11-.86.11-.21 0-.422-.012-.621-.057.425 1.325 1.631 2.299 3.065 2.33A6.51 6.51 0 010 12.756a9.105 9.105 0 005.032 1.501c6.036 0 9.336-5.099 9.336-9.518 0-.148-.005-.291-.012-.433A6.617 6.617 0 0016 2.57z\" id=\"icon\" fill=\"currentColor\" fill-rule=\"nonzero\"/></g></svg>\n`;\n\nexport const spotifyIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"><g id=\"icons/spotify\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M7.997 0C3.587 0 0 3.588 0 7.998 0 12.41 3.587 16 7.997 16 12.41 16 16 12.41 16 7.998 16 3.588 12.41 0 7.997 0zM3.939 10.936a9.698 9.698 0 012.825-.425c1.61 0 3.198.408 4.595 1.18.083.045.159.195.192.381.034.186.02.378-.034.478a.407.407 0 01-.556.16 8.738 8.738 0 00-6.776-.69.406.406 0 01-.514-.268c-.072-.234.076-.753.268-.816zm-.35-2.946a12.103 12.103 0 013.175-.424c1.929 0 3.844.467 5.54 1.35a.498.498 0 01.212.673c-.152.297-.329.496-.441.496a.512.512 0 01-.232-.057 10.886 10.886 0 00-5.08-1.236c-.998 0-1.977.131-2.91.39a.499.499 0 01-.613-.35c-.075-.281.096-.773.35-.842zM3.5 6.065a.587.587 0 01-.715-.428c-.082-.332.126-.717.426-.793a14.91 14.91 0 013.553-.432c2.3 0 4.504.517 6.55 1.537a.592.592 0 01.267.794c-.096.192-.303.398-.531.398a.616.616 0 01-.258-.058 13.35 13.35 0 00-6.028-1.417c-1.09 0-2.188.134-3.264.399z\" id=\"icon\" fill=\"currentColor\" fill-rule=\"nonzero\"/></g></svg>\t\n`;\n\nexport const linkedInIconTemplate = svg`\n\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"><g id=\"icons/linkedin\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><path d=\"M13.656 0H2.344A2.347 2.347 0 000 2.344v11.312A2.347 2.347 0 002.344 16h11.312A2.347 2.347 0 0016 13.656V2.344A2.347 2.347 0 0013.656 0zM6 13H4V6h2v7zm0-8H4V3h2v2zm7 8h-2V9c0-.551-.449-1-1-1-.551 0-1 .449-1 1v4H7V6h2v.377C9.524 6.214 9.864 6 10.5 6c1.356.001 2.5 1.218 2.5 2.656V13z\" id=\"Shape\" fill=\"currentColor\" fill-rule=\"nonzero\"/></g></svg>\n`;\n","import \"./../atoms/text.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Header extends LitElement {\n\tstatic get properties () {\n\t\treturn {\n\t\t\timg: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\ttext: {\n\t\t\t\ttype: String\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t#header-container {\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\n\t\t\t\t#header {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t    height: 80vh;\n                    min-height: 450px;\n\t\t\t\t\tbackground: var(--space-500);\n\t\t\t\t\tcolor: var(--space-500-contrast);\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#content {\n\t\t\t\t\tpadding: var(--spacing-m);\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tmax-width: var(--container-width-s);\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#sun {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttop: 40%;\n\t\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\t\tanimation: rotate 50000s linear infinite;\n\t\t\t\t\ttransform-origin: 0 0;\n\t\t\t\t\twidth: 2000px;\n\t\t\t\t\theight: 2000px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#sun > path {\n\t\t\t\t\tfill: #0B0C2B;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#avatar {\n\t\t\t\t\tanimation: scale 4s ease-in-out infinite;\n\t\t\t\t\tmargin: 0 0 var(--spacing-m);\n\t\t\t\t\twidth: 140px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t::slotted([slot=\"footer\"]) {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttransform: translate(-50%, 50%);\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t    padding: 0 var(--spacing-l);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#buttons > :not(:last-child) {\n\t\t\t\t\tmargin: 0 var(--spacing-xxl) 0 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#projects-button {\n\t\t\t\t\tbackground: #6D73DB;\n\t\t\t\t\tcolor: var(--light);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@keyframes rotate {\n\t\t\t\t\t0% {\n\t\t\t\t\t\ttransform: rotate(0deg) translate(-50%, -50%);\n\t\t\t\t\t}\n\t\t\t\t\t100% {\n\t\t\t\t\t\ttransform: rotate(360000deg) translate(-50%, -50%);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@keyframes scale {\n\t\t\t\t\t0% {\n\t\t\t\t\t\ttransform: scale(1);\n\t\t\t\t\t}\n\t\t\t\t\t50% {\n\t\t\t\t\t\ttransform: scale(1.05);\n\t\t\t\t\t}\n\t\t\t\t\t100% {\n\t\t\t\t\t\ttransform: scale(1);;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<div id=\"header-container\">\n\t\t\t\t<header id=\"header\">\n\t\t\t\t\t<svg id=\"sun\" preserveAspectRatio=\"none\" viewBox=\"0 0 2294 2294\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t<path d=\"M1966.794 0c-316.537 558.384-818.016 1145.222-818.016 1145.222S1735.616 643.742 2294 327.206v312.98c-529.932 288.084-1145.222 505.036-1145.222 505.036S1721.39 1038.524 2294 1013.628v266.744c-572.61-24.896-1145.222-131.594-1145.222-131.594S1764.068 1365.73 2294 1653.814v312.98c-558.384-316.537-1145.222-818.016-1145.222-818.016s501.48 586.838 818.016 1145.222h-312.98c-288.084-529.932-505.036-1141.665-505.036-1145.222 0 0 106.698 572.611 131.594 1145.222h-263.188c24.897-572.61 131.594-1141.665 131.594-1145.222 0 0-216.952 615.29-505.035 1145.222H327.206c316.537-558.384 814.46-1145.222 818.016-1145.222 0 0-586.838 501.48-1145.222 818.016v-312.98c529.932-288.084 1141.665-505.036 1145.222-505.036 0 0-572.611 106.698-1145.222 131.594v-263.188c572.61 24.897 1141.665 131.594 1145.222 131.594 0 0-615.29-216.952-1145.222-505.035v-312.98c558.384 316.536 1145.222 814.459 1145.222 818.015 0 0-501.48-586.837-818.016-1145.221h312.98c288.084 529.931 505.036 1145.221 505.036 1145.221S1038.524 576.168 1013.628 3.557h263.187c-24.896 572.61-131.593 1145.221-131.593 1145.221s216.952-615.29 505.035-1145.221h316.537V0z\" fill=\"#000\" fill-rule=\"nonzero\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div id=\"content\">\n\t\t\t\t\t\t${this.img != null ? html`<img id=\"avatar\" src=\"assets/andreas.png\" alt=\"Avatar\"/>` : \"\"}\n\t\t\t\t\t\t${this.text != null ? html`<an-text id=\"title\" role=\"heading\" aria-level=\"1\">Hi, I'm Andreas. I love building awesome things for the web.</an-text>` : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<slot name=\"footer\"></slot>\n\t\t\t</div>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-header\", Header);","import { LitElement, html, css } from \"./../web_modules/lit-element.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\n\nclass Button extends LitElement {\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tuser-select: none;\n\t\t\t\t    align-items: center;\n\t\t\t        justify-content: center;\n                    line-height: 1;\n                    text-decoration: none;\n\t\t\t\t\tpadding: var(--spacing-m) var(--spacing-xxl);\n\t\t\t\t\tbackground: var(--background);\n\t\t\t\t\tcolor: var(--foreground);\n\t\t\t\t\tbox-shadow: var(--shadow);\n\t\t\t\t\tborder-radius: var(--border-radius-m);\n\t\t\t\t\ttransition: 120ms ease transform;\n\t\t\t\t\ttransform: scale(1);\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\toverflow: hidden;\n                    text-overflow: ellipsis;\n                    outline: none;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host(:hover), :host(:focus-visible) {\n\t\t\t\t\ttransform: scale(1.06);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t:host(:focus-visible) {\n\t\t\t\t\tbox-shadow: 0 0 0 3px var(--red-500);\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t::slotted(an-icon) {\n\t\t\t\t\tflex-shrink: 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t::slotted(:not(:last-child)) {\n\t\t\t\t\tmargin: 0 var(--spacing-m) 0 0;\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\tconstructor () {\n\t\tsuper();\n\t\tthis.tabIndex = 0;\n\t\tthis.role = \"button\";\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<slot></slot>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-button\", Button);","import \"./../atoms/button.js\";\nimport \"./../atoms/icon.js\";\nimport \"./../atoms/text.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Project extends LitElement {\n\tstatic get properties () {\n\t\treturn {\n\t\t\tcover: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\tlogo: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\tdate: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\tname: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\ttext: {\n\t\t\t\ttype: String\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tbackground: var(--background);\n\t\t\t\t\tborder-radius: var(--border-radius-m);\n\t\t\t\t\tbox-shadow: var(--shadow);\n\t\t\t\t\tpadding: var(--spacing-xxxxxl) var(--spacing-xxl) var(--spacing-xxxl);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#cover {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\t/*filter: blur(var(--cover-blur, 8px));*/\n\t\t\t\t\t\n\t\t\t\t\t/* Scale to get rid of ugly blur edge */\n\t\t\t\t\t/*transform: scale(1.1);*/ \n\t\t\t\t\tobject-fit: cover;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#content {\n\t\t\t\t\tbackground: var(--light);\n\t\t\t\t\tcolor: var(--dark);\n\t\t\t\t\tborder-radius: var(--border-radius-m);\n\t\t\t\t\tpadding: var(--spacing-xxxl);\n\t\t\t\t\tbox-shadow: var(--shadow);\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tmax-width: 850px;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#footer {\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#logo {\n\t\t\t\t\twidth: var(--logo-size, 60px);\n\t\t\t\t\theight: var(--logo-size, 60px);\n\t\t\t\t\tobject-fit: contain;\n\t\t\t\t\tmargin: 0 0 var(--spacing-m);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#name {\n\t\t\t\t\tfont-size: var(--font-size-xl);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#text {\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#date {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: var(--spacing-m);\n\t\t\t\t\tleft: var(--spacing-m);\n\t\t\t\t\tfont-size: var(--font-size-s);\n\t\t\t\t\tborder-radius: var(--border-radius-s);\n\t\t\t\t\tpadding: 0 var(--spacing-s);\n\t\t\t\t\tline-height: 2;\n\t\t\t\t\tborder: 1px solid var(--theme-600, #0D0E34);\n\t\t\t\t\tcolor: var(--theme-600, #0D0E34);\n\t\t\t\t\tbackground: var(--theme-600-contrast, white);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t::slotted([slot=\"footer\"]) {\n\t\t\t\t    margin-top: var(--spacing-xxxl);\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: flex-end;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 800px) {\n\t\t\t\t\t#date {\n\t\t\t\t\t    left: 50%;\n                        transform: translateX(-50%);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t${this.cover != null ? html`<img id=\"cover\" loading=\"lazy\" src=\"${this.cover}\" alt=\"${this.name || \"\"} cover.\" role=\"presentation\" />` : \"\"}\n\t\t\t${this.date != null ? html`<div id=\"date\">${this.date}</div>` : \"\"}\n\t\t\t<div id=\"content\">\n\t\t\t\t${this.logo != null ? html`<img id=\"logo\" loading=\"lazy\" src=\"${this.logo}\" alt=\"${this.name || \"\"} logo.\" />` : \"\"}\n\t\t\t\t${this.name != null ? html`<an-text id=\"name\" role=\"heading\" aria-level=\"3\">${this.name}</an-text>` : \"\"}\n\t\t\t\t${this.text != null ? html`<an-text id=\"text\">${this.text}</an-text>` : \"\"}\n\t\t\t</div>\n\t\t\t<slot name=\"footer\"></slot>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-project\", Project);","import {githubIconTemplate, linkedInIconTemplate, spotifyIconTemplate, twitterIconTemplate} from \"../icons.js\";\nimport \"./../atoms/button.js\";\nimport \"./../atoms/buttons.js\";\nimport \"./../atoms/icon.js\";\nimport \"./../atoms/text.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Social extends LitElement {\n\tstatic get properties () {\n\t\treturn {\n\t\t\theadline: {\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\ttext: {\n\t\t\t\ttype: String\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground: var(--shade-300);\n\t\t\t\t\tcolor: var(--shade-300-contrast);\n\t\t\t\t\tborder-radius: var(--border-radius-m);\n\t\t\t\t\tpadding: var(--spacing-xxxxl);\n\t\t\t\t\tbox-shadow: var(--shadow);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#buttons {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<div id=\"info\">\n\t\t\t\t${this.headline != null ? html`<an-text id=\"headline\" role=\"heading\" aria-level=\"2\" center margin=\"medium\">${this.headline}</an-text>` : \"\"}\n\t\t\t\t${this.text != null ? html`<an-text id=\"text\" center margin=\"xlarge\">${this.text}</an-text>` : \"\"}\n\t\t\t</div>\n\t\t\t<an-buttons id=\"buttons\">\n\t\t\t\t<a href=\"https://github.com/andreasbm\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t<an-button style=\"--background: #0D0E34; --foreground: var(--light);\">\n\t\t\t\t\t\t<an-icon .template=\"${githubIconTemplate}\"></an-icon>\n\t\t\t\t\t\t<span>Github</span>\n\t\t\t\t\t</an-button>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://twitter.com/AndreasMehlsen\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t<an-button style=\"--background: #03A9F4; --foreground: var(--light);\">\n\t\t\t\t\t\t<an-icon .template=\"${twitterIconTemplate}\"></an-icon>\n\t\t\t\t\t\t<span>Twitter</span>\n\t\t\t\t\t</an-button>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://open.spotify.com/user/114799118\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t<an-button style=\"--background: #1DB954; --foreground: var(--light);\">\n\t\t\t\t\t\t<an-icon .template=\"${spotifyIconTemplate}\"></an-icon>\n\t\t\t\t\t\t<span>Spotify</span>\n\t\t\t\t\t</an-button>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://www.linkedin.com/in/andreasmehlsen\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t<an-button style=\"--background: #0072B1; --foreground: var(--light);\">\n\t\t\t\t\t\t<an-icon .template=\"${linkedInIconTemplate}\"></an-icon>\n\t\t\t\t\t\t<span>LinkedIn</span>\n\t\t\t\t\t</an-button>\n\t\t\t\t</a>\n\t\t\t</an-buttons>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-social\", Social);","import \"./../atoms/button.js\";\nimport \"./../atoms/icon.js\";\nimport \"./../atoms/text.js\";\nimport {sharedStyles} from \"./../styles/shared.js\";\nimport {css, html, LitElement} from \"./../web_modules/lit-element.js\";\n\nclass Footer extends LitElement {\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#footer {\n\t\t\t\t\tbackground: var(--foreground);\n\t\t\t\t\tcolor: var(--background);\n\t\t\t\t\tpadding: var(--spacing-l) var(--spacing-xxl);\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<footer id=\"footer\">\n\t\t\t\t<span>©2020 - Andreas Mehlsen</span>\n\t\t\t</footer>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-footer\", Footer);","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import {render, html} from \"./../web_modules/lit-html.js\";\n\nexport async function showYoutubeVideo ({youtubeId}) {\n\timport(\"./../web_modules/web-dialog.js\").then(({openDialog}) => {\n\t\topenDialog({\n\t\t\tcenter: true,\n\t\t\t$content: $dialog => render(html`\n\t\t\t\t<style>\n\t\t\t\t\t#video {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 420px;\n\t\t\t\t\t\toutline: none;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t#loading {\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tleft: 50%;\n\t\t\t\t\t\ttop: 50%;\n\t\t\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\t\t\tz-index: -1;\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t\t<div id=\"loading\">Loading...</div>\n\t\t\t\t<iframe\n\t\t\t\t\tid=\"video\"\n\t\t\t\t\tsrc=\"https://www.youtube.com/embed/${youtubeId}?autoplay=1\"\n\t\t\t\t\tframeborder=\"0\"\n\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\t\tallowfullscreen\n\t\t\t\t></iframe>\n\t\t\t  `, $dialog)\n\t\t});\n\t});\n}","import \"./atoms/buttons.js\";\nimport \"./atoms/container.js\";\nimport \"./atoms/icon.js\";\nimport \"./atoms/text.js\";\nimport {\n\tarrowDownIconTemplate,\n\tarrowRightIconTemplate,\n\tgithubIconTemplate,\n\tsendIconTemplate,\n\tvideoIconTemplate\n} from \"./icons.js\";\nimport \"./molecules/header.js\";\nimport \"./molecules/project.js\";\nimport \"./molecules/social.js\";\nimport \"./molecules/footer.js\";\nimport {sharedStyles} from \"./styles/shared.js\";\nimport {showYoutubeVideo} from \"./util/show-youtube-video.js\";\nimport {css, html, LitElement} from \"./web_modules/lit-element.js\";\n\nconst PROJECT_ASSETS_BASE_PATH = `/assets/projects`;\nconst GA_MEASUREMENT_ID = \"UA-96179028-10\";\n\nfunction projectPath (id, extra) {\n\treturn `${PROJECT_ASSETS_BASE_PATH}/${id}${extra != null ? `/${extra}` : \"\"}`;\n}\n\nfunction projectCover (id) {\n\treturn projectPath(id, \"cover.jpg\");\n}\n\nfunction projectLogo (id) {\n\treturn projectPath(id, \"logo.svg\");\n}\n\nclass App extends LitElement {\n\tstatic get styles () {\n\t\treturn [\n\t\t\tsharedStyles,\n\t\t\tcss`\n\t\t\t\t#info-container {\n\t\t\t\t\tpadding-top: var(--spacing-xxxxxl);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.project:not(:last-child) {\n\t\t\t\t\tmargin: 0 0 var(--spacing-xxl);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 770px) {\n\t\t\t\t\t#contact-button, #projects-button {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`\n\t\t];\n\t}\n\n\tconstructor  () {\n\t\tsuper();\n\n\t\t// Track page view (we only have this one page)\n\t\tgtag(\"config\", GA_MEASUREMENT_ID, {\n\t\t\t\"page_path\": location.pathname,\n\t\t\t\"page_location\": location.href\n\t\t});\n\t}\n\n\t/**\n\t * Scrolls to a section of the page.\n\t * @param id\n\t */\n\tscrollTo (id) {\n\t\tlet $elem = null;\n\t\tswitch (id) {\n\t\t\tcase \"projects\":\n\t\t\t\t$elem = this.shadowRoot.querySelector(\"#projects\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ($elem != null) {\n\t\t\t$elem.scrollIntoView({behavior: \"smooth\", block: \"start\"});\n\t\t}\n\t}\n\n\trender () {\n\t\treturn html`\n\t\t\t<!-- Header -->\n\t\t\t<an-header id=\"header\" img=\"assets/andreas.png\" text=\"Hi, I'm Andreas. I love building awesome things for the web.\">\n\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t<an-button id=\"projects-button\" style=\"--background: #6D73DB; --foreground: var(--light);\" @click=\"${() => this.scrollTo(\"projects\")}\">\n\t\t\t\t\t\t<span>See my projects</span>\n\t\t\t\t\t\t<an-icon .template=\"${arrowDownIconTemplate}\"></an-icon>\n\t\t\t\t\t</an-button>\n\t\t\t\t\t<a id=\"github-button\" href=\"https://github.com/andreasbm\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t<an-button>\n\t\t\t\t\t\t\t<an-icon .template=\"${githubIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t<span>Go to my Github</span>\n\t\t\t\t\t\t</an-button>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href=\"mailto:andmehlsen@gmail.com\" target=\"_blank\" rel=\"noopener\" aria-label=\"Open email\">\n\t\t\t\t\t\t<an-button id=\"contact-button\" style=\"--background: var(--yellow-500); --foreground: var(--yellow-500-contrast)\"  @click=\"${() => this.scrollTo(\"contact\")}\">\n\t\t\t\t\t\t\t<span>Contact me</span>\n\t\t\t\t\t\t\t<an-icon .template=\"${sendIconTemplate}\"></an-icon>\n\t\t\t\t\t\t</an-button>\n\t\t\t\t\t</a>\n\t\t\t\t</an-buttons>\n\t\t\t</an-header>\t\n\t\t\t\n\t\t\t<!-- Info -->\n\t\t\t<an-container id=\"info-container\" size=\"small\">\n\t\t\t\t<an-text center>I'm a web developer from Denmark. I love building new exciting things for the web. When I'm not busy working on various projects, you'll find me playing piano or watching cat videos. </an-text>\n\t\t\t</an-container>\n\t\t\t\n\t\t\t<!-- Projects -->\n\t\t\t<an-container id=\"projects\">\n\t\t\t\t<an-text role=\"heading\" aria-level=\"2\" center margin=\"large\">My Projects</an-text>\n\t\t\t\t\n\t\t\t\t<!-- Ideanote -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #000000; --theme-600-contrast: var(--light);\"\n\t\t\t\t\tcover=\"${projectCover(\"ideanote\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"ideanote\")}\"\n\t\t\t\t\tdate=\"2015 - Present\"\n\t\t\t\t\tname=\"Ideanote\"\n\t\t\t\t\ttext=\"Ideanote is the cloud-based innovation platform that empowers your teams to capture, develop and prioritize more of the right ideas.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<an-button style=\"--background: #F4426E; --foreground: var(--light);\" @click=\"${() => showYoutubeVideo({youtubeId: \"9M7Aua8hc0w\"})}\">\n\t\t\t\t\t\t\t<span>Watch a product video</span>\n\t\t\t\t\t\t\t<an-icon .template=\"${videoIconTemplate}\"></an-icon>\n\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t<a href=\"https://ideanote.io\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #000000; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to website</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t\t\n\t\t\t\t<!-- Lasercat -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #8A7225; --theme-600-contrast: var(--light); --logo-size: 80px;\"\n\t\t\t\t\tcover=\"${projectCover(\"lasercat\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"lasercat\")}\"\n\t\t\t\t\tdate=\"2019 - Present\"\n\t\t\t\t\tname=\"Laser Cat\"\n\t\t\t\t\ttext=\"Shoot laser at things you want to remove from the internet.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<a href=\"https://lasercat.app\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #8A7225; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to website</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t\t\n\t\t\t\t<!-- Web skills -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #15873D; --theme-600-contrast: var(--light); --logo-size: 80px;\"\n\t\t\t\t\tcover=\"${projectCover(\"webskills\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"webskills\")}\"\n\t\t\t\t\tdate=\"2020 - Present\"\n\t\t\t\t\tname=\"Web Skills\"\n\t\t\t\t\ttext=\"A visual overview of useful skills to learn as a web developer.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<a href=\"https://andreasbm.github.io/web-skills\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #15873D; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to website</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t\t\n\t\t\t\t<!-- Perfect Playlist -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #1DB954; --theme-600-contrast: var(--light); --logo-size: 80px;\"\n\t\t\t\t\tcover=\"${projectCover(\"perfectplaylist\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"perfectplaylist\")}\"\n\t\t\t\t\tdate=\"2019\"\n\t\t\t\t\tname=\"Perfect Playlist\"\n\t\t\t\t\ttext=\"Create the perfect playlist based on you and your friends favorite music.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<a href=\"https://perfectplaylist.app\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #1DB954; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to website</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t\t\n\t\t\t\t<!-- Wordbase -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #A75C08; --theme-600-contrast: var(--light); --logo-size: 80px;\"\n\t\t\t\t\tcover=\"${projectCover(\"wordbase\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"wordbase\")}\"\n\t\t\t\t\tdate=\"2013 - 2016\"\n\t\t\t\t\tname=\"Wordbase\"\n\t\t\t\t\ttext=\"Play chess with your vocabulary in Wordbase, the tactical word game that requires the strategic prowess of chess or checkers, along with a mind like a dictionary, to master.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<an-button style=\"--background: #00C9EA; --foreground: var(--light);\" @click=\"${() => showYoutubeVideo({youtubeId: \"7zxtR0segS8\"})}\">\n\t\t\t\t\t\t\t<span>Watch an epic battle</span>\n\t\t\t\t\t\t\t<an-icon .template=\"${videoIconTemplate}\"></an-icon>\n\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t<a href=\"https://wordbaseapp.com\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #FF8800; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to website</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t\t\n\t\t\t\t<!-- Ruandpiano -->\n\t\t\t\t<an-project\n\t\t\t\t\tclass=\"project\"\n\t\t\t\t\tstyle=\"--theme-600: #151515; --theme-600-contrast: var(--light); --logo-size: 80px;\"\n\t\t\t\t\tcover=\"${projectCover(\"ruandpiano\")}\"\n\t\t\t\t\tlogo=\"${projectLogo(\"ruandpiano\")}\"\n\t\t\t\t\tdate=\"2010 - 2013\"\n\t\t\t\t\tname=\"Ruandpiano\"\n\t\t\t\t\ttext=\"Twins playing four-handed piano.\">\n\t\t\t\t\t<an-buttons slot=\"footer\">\n\t\t\t\t\t\t<an-button style=\"--background: var(--light); --foreground: #151515;\" @click=\"${() => showYoutubeVideo({youtubeId: \"JjydF2u0mnY\"})}\">\n\t\t\t\t\t\t\t<span>Watch my favorite recording</span>\n\t\t\t\t\t\t\t<an-icon .template=\"${videoIconTemplate}\"></an-icon>\n\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t<a href=\"https://www.youtube.com/user/ruandpiano\" target=\"_blank\" rel=\"noopener\">\n\t\t\t\t\t\t\t<an-button style=\"--background: #151515; --foreground: var(--light);\">\n\t\t\t\t\t\t\t\t<span>Go to Youtube</span>\n\t\t\t\t\t\t\t\t<an-icon .template=\"${arrowRightIconTemplate}\"></an-icon>\n\t\t\t\t\t\t\t</an-button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</an-buttons>\n\t\t\t\t</an-project>\n\t\t\t</an-container>\n\t\t\t\n\t\t\t<!-- Social -->\n\t\t\t<an-container>\n\t\t\t\t<an-social headline=\"Say hi\" text=\"If you want to learn more about what I'm doing, find me on my favorite platforms.\"></an-social>\n\t\t\t</an-container>\n\t\t\t\n\t\t\t<!-- Footer -->\n\t\t\t<an-footer></an-footer>\n\t\t`;\n\t}\n}\n\ncustomElements.define(\"an-app\", App);","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}